expression 'Errors in Student' =
		let
		Source = Student,
		  #"Detected Type Mismatches" = let
		    tableWithOnlyPrimitiveTypes = Table.SelectColumns(Source, Table.ColumnsOfType(Source, {type nullable number, type nullable text, type nullable logical, type nullable date, type nullable datetime, type nullable datetimezone, type nullable time, type nullable duration})),
		    recordTypeFields = Type.RecordFields(Type.TableRow(Value.Type(tableWithOnlyPrimitiveTypes))),
		    fieldNames = Record.FieldNames(recordTypeFields),
		    fieldTypes = List.Transform(Record.ToList(recordTypeFields), each [Type]),
		    pairs = List.Transform(List.Positions(fieldNames), (i) => {fieldNames{i}, (v) => if v = null or Value.Is(v, fieldTypes{i}) then v else error [Message = "The type of the value does not match the type of the column.", Detail = v], fieldTypes{i}})
		in
		    Table.TransformColumns(Source, pairs),
		  #"Added Index" = Table.AddIndexColumn(#"Detected Type Mismatches", "Row Number" ,1),
		  #"Kept Errors" = Table.SelectRowsWithErrors(#"Added Index", {"SID", "Name", "Gender", "EID", "Age", "Classid", "Enrol_Year", "Active", "Attendance", "National_Success_Type", "win_status"}),
		  #"Reordered Columns" = Table.ReorderColumns(#"Kept Errors", {"Row Number", "SID", "Name", "Gender", "EID", "Age", "Classid", "Enrol_Year", "Active", "Attendance", "National_Success_Type", "win_status"})
		in
		  #"Reordered Columns"
	lineageTag: f762acbd-ca40-4668-b15d-fc9e56468c2b
	queryGroup: 'Query Errors - 11/15/2023 12:30:52 AM'

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

